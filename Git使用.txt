1.常用操作

切换分支 : git checkout name

查看分支 : git branch -a

撤销修改 : git checkout -- file

删除文件 : git rm file

查看状态 : git status

添加记录 : git add file 或 git add .

添加描述 : git commit -m "MOD:描述内容"

同步数据 : git pull

提交数据 : git push

回滚到指定版本 : git reset --hard xxx
强推到远程分支 : git push -u origin master -f (origin：远程仓库名  master：分支名称  -f：force，意为强制、强行)


2.常用操作顺序

git status (pull前最好能看下本地是个什么情况，是否有修改)

git add .

git commit -m "MOD:描述内容"

git pull (确保本地代码是最新的)

git push

git status (确保真的push上去了)


3.分支操作

查看分支             : git branch

创建分支             : git branch name 或git branch --track name

切换分支             : git checkout name

创建+切换分支         : git checkout -b name

合并某分支到当前分支     : git merge name

删除分支             : git branch -d name

删除远程分支         : git push origin :name


4.分支操作合并到master操作顺序

git checkout xxx               切换到自己的工作分支，走 2.常用操作顺序  流程

git checkout master         回到主分支               

git pull                               获取远程最新的修改，不会产生冲突   

git checkout xxx               回到工作分支           

git rebase master             合并主干修改，如果有冲突在此时解决   

git checkout master         回到主分支               

git merge xxx                    合并工作分支的修改，此时不会产生冲突   

git push                             提交到远程主干           


5.标签创建

git tag v1.0.0          创建标签

git push origin --tags  一次性推送全部尚未推送到远程的本地标签

git tag                 查看所有标签


6.删除远程标签

git tag -d v3.0.1                               删除本地标签 v3.0.1

git push origin :refs/tags/v3.0.1     删除远程标签 v3.0.1 


7.git服务地址迁移

    方式一：(注：1、保证本地和远程代码版本一致 2、该方式会把旧服务地址所有历史提交、tag以及分支都一次性迁移到新地址)

          git remote rename origin old-origin

          git remote add origin

          git push -u origin --all

          git push -u origin --tags

          删除本地代码，从新服务地址重新clone工程 或者找到本地代码隐藏目录(.git目录)中的config文件，删除里面的老(old-origin)地址路径

    方式二：(注：该方式只能把当前本地的工程提交到新git服务地址，历史提交以及tag都不会在新地址中显示，且只有一个master分支)
    找到本地代码隐藏目录(.git目录)，删除该目录。
    在当前页面 git init
    git add .
    git commit -m "注释语句"
    git remote add origin https://***.git(新git地址)
    git pull origin master
    
    git pull origin master --allow-unrelated-histories

    git push -u origin master



文件显示忽略文件：
defaults write com.apple.finder AppleShowAllFiles -boolean true

